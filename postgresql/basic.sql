ROLLBACK;
BEGIN;

SELECT 1;

DROP TABLE IF EXISTS yuitest, table1;
DROP DOMAIN IF EXISTS nat;

CREATE TEMPORARY TABLE table1 (
  id INTEGER UNIQUE GENERATED ALWAYS AS IDENTITY
);

CREATE DOMAIN nat AS integer CHECK (VALUE > 0);
CREATE TEMPORARY TABLE yuitest (
  id SERIAL PRIMARY KEY,
  id2 INTEGER CONSTRAINT id GENERATED ALWAYS AS IDENTITY (START 10),
  sum INTEGER CONSTRAINT sum GENERATED ALWAYS AS (x + y) STORED,
  label TEXT NOT NULL DEFAULT '',
  x INTEGER CONSTRAINT a CHECK (x > y),
  y INTEGER ,
  t2id INTEGER REFERENCES table1 (id),
  d nat NOT NULL DEFAULT 10,
  f FLOAT,
  CONSTRAINT c CHECK(y > -100),
  EXCLUDE USING btree (floor(f) WITH =)
);

COMMENT ON TABLE yuitest IS 'Hello';
COMMENT ON COLUMN yuitest.id IS 'This is an ID';

INSERT INTO yuitest (label, x, y)
  (SELECT 'abc' || CAST (x as text), x * x + 1, x FROM generate_series(1, 10) as t(x));

INSERT INTO yuitest (id2) OVERRIDING SYSTEM VALUE VALUES (1) ;

INSERT INTO yuitest (x, t2id) (select id * 100, id FROM table1);

ALTER TABLE yuitest
  ALTER COLUMN label type VARCHAR,
  ADD COLUMN t INTEGER NOT NULL DEFAULT 10;

--
ALTER TABLE yuitest RENAME TO y;
ALTER TABLE y RENAME COLUMN x TO xx;
ALTER TABLE y RENAME COLUMN xx TO x;
ALTER TABLE y RENAME CONSTRAINT a TO b;
ALTER TABLE y RENAME TO yuitest;

ALTER TABLE yuitest ALTER COLUMN t DROP DEFAULT;

ALTER TABLE yuitest DROP CONSTRAINT c;
ALTER TABLE yuitest ALTER id2 DROP IDENTITY;
ALTER TABLE yuitest ALTER id2 ADD GENERATED ALWAYS AS IDENTITY (START WITH 100);
ALTER TABLE yuitest ADD CONSTRAINT c CHECK(y > -10);

INSERT INTO yuitest (x, y, t) VALUES (10, 1, 1);

COMMIT;
