ROLLBACK;
BEGIN;

DROP TABLE IF EXISTS test_partitioned, test_partitioned_1, test_partitioned_rest;

CREATE TEMPORARY TABLE test_partitioned (
  id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  value VARCHAR,
  PRIMARY KEY (id)
)
PARTITION BY RANGE (id);

-- Create initial partitions
CREATE TEMPORARY TABLE test_partitioned_1 PARTITION OF test_partitioned
  FOR VALUES FROM (0) TO (1000);
CREATE TEMPORARY TABLE test_partitioned_rest PARTITION OF test_partitioned DEFAULT;
INSERT INTO test_partitioned (value)
  (SELECT generate_series(1, 5000));


-- Add another partition
ALTER TABLE test_partitioned DETACH PARTITION test_partitioned_rest;
CREATE TEMPORARY TABLE test_partitioned_2 PARTITION OF test_partitioned
  FOR VALUES FROM (1000) to (2000);

INSERT INTO test_partitioned (SELECT * FROM test_partitioned_rest WHERE id < 2000);
DELETE FROM test_partitioned_rest WHERE id < 2000;

ALTER TABLE test_partitioned ATTACH PARTITION test_partitioned_rest DEFAULT;

ALTER TABLE test_partitioned DETACH PARTITION test_partitioned_rest;
ALTER TABLE test_partitioned ATTACH PARTITION test_partitioned_rest FOR VALUES FROM (2000) TO (MAXVALUE);


-- SELECT min(value), max(value) FROM test_partitioned_0_5;
SELECT min(value), max(value) FROM test_partitioned_1;
SELECT min(value), max(value) FROM test_partitioned_2;
SELECT min(value), max(value) FROM test_partitioned_rest;

COMMIT;
